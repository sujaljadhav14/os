#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <sys/wait.h>

int main() {
    // ---------- FILE MANAGEMENT ----------
    int fd = open("example.txt", O_CREAT | O_WRONLY, 0644);
    if (fd < 0) {
        perror("File creation failed");
        return 1;
    }
    write(fd, "Hello from file system call!\n", 30);
    close(fd);
    printf("File 'example.txt' created and written.\n");

    // ---------- DIRECTORY MANAGEMENT ----------
    if (mkdir("test_dir", 0755) == 0) {
        printf("Directory 'test_dir' created successfully.\n");
    } else {
        perror("Directory creation failed");
    }

    chdir("test_dir");
    char cwd[1024];
    getcwd(cwd, sizeof(cwd));
    printf("Changed to directory: %s\n", cwd);
    chdir(".."); // Go back to parent directory

    // ---------- PROCESS MANAGEMENT ----------
    pid_t pid = fork();

    if (pid < 0) {
        perror("Fork failed");
        return 1;
    } else if (pid == 0) {
        // Child process
        printf("\n--- Child Process ---\n");
        printf("Child PID: %d\n", getpid());
        printf("Parent PID: %d\n", getppid());
        exit(0); // Child terminates
    } else {
        // Parent process
        wait(NULL); // Wait for child
        printf("\n--- Parent Process ---\n");
        printf("Parent PID: %d\n", getpid());
    }

    return 0;
}
