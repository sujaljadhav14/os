#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>

char buffer[3];  // Buffer with a size of 3

int empty = 3, full = 0;  // Initially, the buffer is empty
int in = 0, out = 0;  // Indices to track the buffer
int S = 1;  // Semaphore initialization

// Wait operation (decrease the semaphore)
void wait() {
    S = S - 1;
}

// Signal operation (increase the semaphore)
void signal() {
    S = S + 1;
}

// Function to produce an item
char produce() {
    char item;
    printf("\nEnter data: ");
    getchar();  // Clear the buffer after scanf
    scanf("%c", &item);  // Read the item to be produced
    return item;
}

// Producer function
void producer() {
    char item_P;
    if (full == 3) {
        printf("\nBuffer is full.\n");
        return;
    }
    
    wait();  // Wait for semaphore S
    wait();  // Wait if the buffer is empty

    item_P = produce();
    printf("Producer produced item %c\n", item_P);
    
    buffer[in] = item_P;
    in = (in + 1) % 3;  // Circular buffer
    signal();  // Signal the semaphore S
    signal();  // Signal the full semaphore
    
    full++;  // Increment the full count
    empty--;  // Decrease the empty count
}

// Consumer function
void consumer() {
    char item_C;
    if (empty == 3) {
        printf("\nBuffer is empty.\n");
        return;
    }

    wait();  // Wait for semaphore S
    wait();  // Wait if the buffer is full

    item_C = buffer[out];
    out = (out + 1) % 3;  // Circular buffer
    printf("\nConsumer consumed item %c\n", item_C);

    signal();  // Signal the semaphore S
    signal();  // Signal the empty semaphore
    
    full--;  // Decrease the full count
    empty++;  // Increment the empty count
}

// Main function with menu to produce and consume
int main() {
    int c;
    do {
        printf("\nMENU\n1. Produce\n2. Consume\n3. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &c);

        switch (c) {
            case 1: 
                producer();
                break;
            case 2: 
                consumer();
                break;
            case 3:
                exit(0);
                break;
            default:
                printf("\nInvalid choice.\n");
        }
    } while (c != 3);

    return 0;
}
